package com.wesolemarcheweczki.backend.mail;

import com.wesolemarcheweczki.backend.dao.TicketDAO;
import com.wesolemarcheweczki.backend.model.Order;
import com.wesolemarcheweczki.backend.model.Ticket;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.time.LocalDateTime;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;


@Component
public class MailReminder {

    private static final ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
    private static final String MAIL_TITLE = "Upcoming Flights";
    private static final String WHITELISTED = null;

    @Autowired
    MailSender sender;
    @Autowired
    TicketDAO dao;

    @PostConstruct
    private void init() {
        executor.scheduleAtFixedRate(this::sendNotifications, 20, 5, TimeUnit.SECONDS);
    }


    private void sendNotifications() {
        var ticketsToUpdate = dao.getAll().stream()
                .filter(t -> !t.isSent())
                .filter(t -> t.getFlight().getDeparture().minusDays(30).isBefore(LocalDateTime.now()))
                .collect(Collectors.toList());

        ticketsToUpdate.stream()
                .collect(Collectors.groupingBy(Ticket::getOrder))
                .forEach(this::sendMail);

        ticketsToUpdate.forEach(t -> t.setSent(true));
        dao.updateAll(ticketsToUpdate);
    }

    private void sendMail(Order order, List<Ticket> tickets) {
        String mail = order.getClient().getEmail();

        if (!mail.equals(WHITELISTED)) { //This is to prevent sending mails to autogenerated client emails
            return;
        }

        String flights = tickets.stream()
                .collect(Collectors.groupingBy(Ticket::getFlight))
                .entrySet().stream()
                .map(e -> MailHelper.generateFLightString(e.getKey(), e.getValue()))
                .reduce("", (a, b) -> a + "\n\n" + b);

        String body = "You have upcoming flights: " + flights;

        sender.sendMailAsync(mail, MAIL_TITLE, body);
    }


}
